# presents a list of characters to choose from to modify their stats
def characters_menu():
    # 16 total characters
    main_character = "gi ho"
    characters = [main_character, "Shamino", "Iolo", "Gwenno", "Julia", "Toshi", "Jaana", "Mariah", "Katrina", "Geoffrey", "Maxwell", "Sentri", "Dupre", "Johne", "Gorn", "Saduj"]
    
    # display the list of characters
    print("Choose a character to modify:") 
    for character in characters:
        print("- " + character)
    print("- EXIT")

    chosen_character = input()

    # verify that the character chosen exists, or "EXIT" to close the program
    while chosen_character.lower() not in [c.lower() for c in characters]:
        if chosen_character.upper() == "EXIT":
            return chosen_character.upper()

        print("Please select a valid character.")
        chosen_character = input()

    print()
    print("You have chosen " + chosen_character.upper())
    print()
    
    if chosen_character.lower() == main_character.lower():
        return main_character
    else:
        return chosen_character.title()

def edit_saved_gam(offset: hex, value: int):
    with open(r"C:\Users\giosa\AppData\Local\OLDGAMES\Ultima_5\SAVED.GAM", "rb+") as SAVED_GAM:
        SAVED_GAM.seek(offset)
        decimal_to_bytes = (value).to_bytes(2, byteorder = "little")
        SAVED_GAM.write(decimal_to_bytes)

# main function
def main():
    main_character = "Gi Ho"
    characters_offsets = {main_character: 0x00000000, "Shamino": 0x00000020, "Iolo": 0x00000040, "Gwenno": 0x00000140, "Julia": 0x000000C0, "Toshi": 0x000001C0, "Jaana": 0x000000A0, "Mariah": 0x00000060, "Katrina": 0x00000100, 
        "Geoffrey": 0x00000080, "Maxwell": 0x000001A0, "Sentri": 0x00000120, "Dupre": 0x000000E0, "Johne": 0x00000160, "Gorn": 0x00000180, "Saduj": 0x000001E0}
    stats_offsets = {"Strength": 0x0E, "Dexterity": 0x0F, "Intelligence": 0x10, "Hp": 0x12, "Max Hp": 0x14, "Experience": 0x16}
    items_offsets = {"Gold": 0x00000204, "Gems": 0x00000207, "Keys": 0x00000206, "Skull Keys": 0x0000020B, "Magic Axe": 0x00000240, "Magic Carpet": 0x0000020A, "Black Badge": 0x00000218}

    party_items = ["100 keys", "100 skull keys", "100 gems", "1 black badge", "2 magic carpets", "10 magic axes"]
    # give every character the items above

    stats = ["Strength", "Dexterity", "Intelligence", "Hp", "Max Hp", "Experience"]
    stats_max = {"Strength": 99, "Intelligence": 99, "Dexterity": 99, "Hp": 999, "Max Hp": 999, "Experience": 9999}
    items_max = {"Gold": 9999, "Keys": 99, "Skull Keys": 99, "Gems": 99, "Black Badge": 1, "Magic Carpet": 2, "Magic Axe": 10}

    print("ULTIMA V SAVED.GAM EDITOR\n")

    # give every character max stats
    for offset in characters_offsets.values():
        edit_saved_gam(offset + stats_offsets["Strength"], 99)
        edit_saved_gam(offset + stats_offsets["Dexterity"], 99)
        edit_saved_gam(offset + stats_offsets["Intelligence"], 99)
        edit_saved_gam(offset + stats_offsets["Hp"], 999)
        edit_saved_gam(offset + stats_offsets["Max Hp"], 999)
        edit_saved_gam(offset + stats_offsets["Experience"], 9999)

    print("By default, every character was given max stats:")
    for stat, max in stats_max.items():
        print("- {}: {}".format(stat, str(max)))
    print()

    # give the party the required items
    for item, offset in items_offsets.items():
        edit_saved_gam(offset, items_max[item])
    
    print("The party was given:")
    for item in party_items:
        print("- {}".format(item))
    print()

    # give the user the option to edit characters' stats
    chosen_character = ""
    while chosen_character != "EXIT":
        chosen_character = characters_menu()
        if chosen_character == "EXIT":
            break
        # print("CHOSEN CHARACTER: " + chosen_character)

        # choose which stat to modify
        print(("Which stat would you like to modify?"))
        for stat in stats:
            print("- " + stat)
        chosen_stat = input()
        # verify that the stat exists
        while chosen_stat.lower() not in [s.lower() for s in stats]:
            chosen_stat = input("Please choose a valid stat to modify. ")

        # enter a valid value for the stat chosen
        print()
        print("What value would you like to give {}'s {}? (Range: 0 - {})".format(chosen_character.title(), chosen_stat.title(), str(stats_max[chosen_stat.title()])))
        chosen_value = int(input())
        while chosen_value < 0 or chosen_value > stats_max[chosen_stat.title()]:
            chosen_value = int(input("Please enter a value within the range. "))

        edit_saved_gam(characters_offsets[chosen_character.title()] + stats_offsets[chosen_stat.title()], chosen_value)
        print("{}'s {} value is now {}.".format(chosen_character, chosen_stat, str(chosen_value)))

        # end of loop
        print()

    print("\nSuccessfully exited the program.")

main()